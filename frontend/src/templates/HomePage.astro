---
/**
 * Homepage Template for ApostropheCMS content
 *
 * @file
 * @description
 * Renders the homepage with support for multiple layouts (foundation and showcase).
 * Handles fallback to default content when CMS data is not provided.
 *
 * @requires ../widgets/HeroWidget
 * @requires ../widgets/SlideshowWidget
 * @requires @apostrophecms/apostrophe-astro/components/AposArea
 * @requires ../lib/homepage-defaults
 *
 * @typedef {Object} AposProps
 * @property {Object} page - Page data from ApostropheCMS
 * @property {('foundation'|'showcase')} [page.layout='foundation'] - Layout type
 * @property {Object} [page.heroSection] - Hero section data
 * @property {Object} [page.showcaseSlideshow] - Slideshow data
 * @property {Object} [page.main] - Main content area data
 * @property {Object} user - Current user data
 * @property {Object} query - URL query parameters
 * @property {Object} global - Global site data
 *
 * @component
 * @example
 * // foundation layout with hero
 * <HomePage aposData={{
 *   page: {
 *     layout: 'foundation',
 *     heroSection: { mainContent: { title: 'Welcome' } }
 *   }
 * }} />
 *
 * // showcase layout with slideshow
 * <HomePage aposData={{
 *   page: {
 *     layout: 'showcase',
 *     showcaseSlideshow: { slides: [...] }
 *   }
 * }} />
 */

import Hero from '../widgets/HeroWidget.astro';
import Slideshow from '../widgets/SlideshowWidget.astro';
import AposArea from '@apostrophecms/apostrophe-astro/components/AposArea.astro';

import { heroDefaults, slideshowDefaults } from '../lib/homepage-defaults.js';

const { page, user, query, global } = Astro.props.aposData;
const { layout = 'foundation', heroSection = {}, showcaseSlideshow = {}, main = {} } = page;

// Use default data if no data is provided
const heroData = heroSection?.mainContent?.title ? heroSection : heroDefaults;
const slideshowData = showcaseSlideshow?.slides?.length ? showcaseSlideshow : slideshowDefaults;

---
<div class="main-content astro-hp-content">
  {/* Foundation Layout */}
  {layout === 'foundation' && (
    <>
      {heroData && <Hero widget={heroData} />}
    </>
  )}

  {/* Showcase Layout */}
  {layout === 'showcase' && (
    <>
      {slideshowData && (
        <div class="showcase-slideshow">
          <Slideshow widget={slideshowData} />
        </div>
      )}
    </>
  )}

    {/* Main Content Area */}
  <div class="minimal-container">
    <AposArea area={main} />
  </div>
</div>